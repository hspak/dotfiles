set nocompatible        " use Vim defaults, screw vi

" General Options
" -------------------------------------
set t_Co=256            " enable 256 colors
set mouse=a             " make sure mouse is used in all cases.
set autoread
set autowrite
set backspace=indent,eol,start
set shortmess+=I        " disable the welcome screen
set complete+=k         " enable dictionary completion
set completeopt=longest,menuone
set showcmd
set title
set virtualedit=all
set wildmenu
set wildmode=list:longest,full
set scrolloff=5
set shortmess=atI
set laststatus=2        " always show a status line
set clipboard+=unnamed  " yank and copy to X clipboard
set backspace=2         " full backspacing capabilities
set history=50          " 50 lines of command line history
set ruler               " ruler display in status line
set showmode            " show mode at bottom of screen
set ww=<,>,[,]          " whichwrap -- left/right keys can traverse up/down
set cmdheight=1         " set the command height
set showmatch           " show matching brackets (),{},[]
set number              " show number line
set hidden              " allow unsaved buffers to go in background
set shell=/bin/bash     " set shell
set cc=80               " 80 char column indicator
set cursorline          " highlight current line

"  wrap like other editors
" -------------------------------------
set wrap                " word wrap
set lbr                 " line break

" backup settings
" -------------------------------------
set backup              " keep a backup file
set backupdir=~/.vim/backup      " backup dir
set directory=~/.vim/swap " swap file directory

" tabs and indenting
" -------------------------------------
set expandtab           " replace tabs with spaces
set tabstop=2           " a n-space tab width
set shiftwidth=2        " allows the use of < and > for VISUAL indenting
set autoindent          " auto indents next new line
set smarttab

" searching
" -------------------------------------
set hlsearch            " highlight search results
set incsearch           " increment search
set ignorecase          " case-insensitive search
set smartcase           " upper-case sensitive search

" Code Folding
"---------------------------------
if has ('folding')
  set foldenable
  set foldmethod=marker
  set foldmarker={{{,}}}
  set foldcolumn=0
endif

" plug-in settings
" -------------------------------------
call pathogen#runtime_append_all_bundles()

filetype on
filetype plugin on
filetype indent on
set ofu=syntaxcomplete#Complete

" syntax highlighting
" -------------------------------------
syntax on               " enable syntax highlighting
syntax enable

if &term ==# "linux"
    colorscheme desert
else
  colorscheme neverland2_mod
endif

" custom keybindings
" -------------------------------------
let maplocalleader = ","
let mapleader = ","

map Q <Nop>
map q: <Nop>
map <F11> <Nop>

map <F2> :wall<CR>
map <silent> <F12> :set hlsearch! hlsearch?<CR>
map <silent> <LocalLeader>l :NERDTreeToggle<CR>
map <silent> <LocalLeader>p :TlistToggle<CR>
map <silent> <LocalLeader>m :bnext<cr>
map <silent> <LocalLeader>v :bprev<cr>

" building
nnoremap <F5> :!make<CR>
nnoremap <S-F5> :make %<<CR>
nnoremap <S-F6> :!./"%"<CR>

" whitespace
nnoremap <F10> :EraseBadWhitespace<CR>
nnoremap <F11> :ToggleBadWhitespace<CR>

" map space to create/open/close fold
nnoremap <silent> <Space> @=(foldlevel('.')?'za':'l')<CR>
vnoremap <Space> zf

nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" normal movement for wrapped lines
noremap k gk
noremap j gj

" quick split
noremap <silent> V :vsplit<CR> :wincmd l<CR>
noremap <silent> H :split<CR> :wincmd j<CR>

nnoremap Q <C-W>q
nnoremap W :wq<CR>
nnoremap B :buffers<CR>:buffer<Space>
" nnoremap T :TlistAddFiles<Space>

" resizing
"noremap + <C-w><
"noremap _ <C-w>>
"noremap = <C-w>+
"noremap - <C-w>-

" window movement
nnoremap <silent> <C-k> :wincmd k<CR>
nnoremap <silent> <C-l> <C-W>w
nnoremap <silent> <C-h> :wincmd h<CR>
nnoremap <silent> <C-j> :wincmd j<CR>

" tab navigation
noremap <LocalLeader>1 1gt
noremap <LocalLeader>2 2gt
noremap <LocalLeader>3 3gt
noremap <LocalLeader>4 4gt
noremap <LocalLeader>5 5gt
noremap <LocalLeader>6 6gt
noremap <LocalLeader>7 7gt
noremap <LocalLeader>8 8gt
noremap <LocalLeader>9 9gt
noremap <LocalLeader>10 10gt

cmap w!! w !sudo tee % >/dev/null<CR>:e!<CR><CR>

" auto commands
" -------------------------------------
" allow
au BufWritePost * if getline(1) =~ "^#!" | silent :!chmod +x <afile>

" save last position
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif "

" file type specific settings
au FileType c         setlocal ts=8 sw=8
au FileType cpp       setlocal ts=4 sw=4
au FileType make      setlocal noet
au FileType python    setlocal sw=4 ts=4

let &titleold=getcwd()

" plugin settings
" -------------------------------------
" let NERDSpaceDelims = 1
let NERDUsePlaceHolders = 0
let NERDTreeQuitOnOpen = 1
let NERDChristmasTree = 1

