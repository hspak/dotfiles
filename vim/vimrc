set nocompatible                      " use Vim defaults, screw vi
filetype off                          " I think I needed this up here for something

" vundle stuff
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" my bundles
Bundle 'scrooloose/nerdcommenter'     
Bundle 'scrooloose/syntastic'         
Bundle 'scrooloose/nerdtree'          
Bundle 'Yggdroot/indentLine'          
Bundle 'kien/ctrlp.vim'
Bundle 'Raimondi/delimitMate'
Bundle 'bling/vim-airline'
Bundle 'WeiChungWu/vim-SystemVerilog'
" Bundle 'marijnh/tern_for_vim'
"Bundle 'Valloric/YouCompleteMe'

" lesser bundles
Bundle 'digitaltoad/vim-jade'

" General Options
" -------------------------------------
set t_Co=256                          " enable 256 colors
set mouse=a                           " make sure mouse is used in all cases.
set autoread                          " detect external changes
set autowrite                         " saves file on buffer switch
set backspace=indent,eol,start        " behave like a normal backspace
set shortmess+=I                      " disable the welcome screen
set complete+=k                       " enable dictionary completion
set completeopt=longest,menuone       " better completion popup
set showcmd                           " display current command
set title                             " sets terminal title 
set virtualedit=all                   " enable visual block edit
set wildmenu                          " cmd line completion
set wildmode=list:longest,full        " cmd line completion
set scrolloff=5                       " lines between cursor and edge
set shortmess=atI                     " avoid annoying prompts?
set laststatus=2                      " always show a status line
set clipboard+=unnamed                " yank and copy to X clipboard
set backspace=2                       " full backspacing capabilities
set history=50                        " 50 lines of command line history
set ruler                             " ruler display in status line
set noshowmode                        " dont show mode (airline)
set ww=<,>,[,]                        " whichwrap -- left/right keys can traverse up/down
set cmdheight=1                       " set the command height
set showmatch                         " show matching brackets (),{},[]
set number                            " show number line
set hidden                            " allow unsaved buffers to go in background
set shell=/bin/bash                   " set shell
set cursorline                        " highlight current line
set visualbell                        " don't beep
set magic                             " enables regex highlight?
set lazyredraw
"set cc=80                            " 80 char column indicator


"  wrap like other editors
" -------------------------------------
set wrap                              " word wrap
set lbr                               " line break

" backup settings
" -------------------------------------
set backup                            " keep a backup file
set backupdir=~/.vim/backup           " backup dir
set directory=~/.vim/swap             " swap file directory

" tabs and indenting
" -------------------------------------
set expandtab                         " replace tabs with spaces
set tabstop=2                         " a n-space tab width
set shiftwidth=2                      " allows the use of < and > for VISUAL indenting
set autoindent                        " auto indents next new line
set smarttab                          " it reads your mind?
set shiftround                        " better tab aligning

" searching
" -------------------------------------
set hlsearch                          " highlight search results
set incsearch                         " increment search
set ignorecase                        " case-insensitive search
set smartcase                         " upper-case sensitive search

" Code Folding
"---------------------------------
if has ('folding')
  set foldenable
  set foldmethod=marker
  set foldmarker={{{,}}}
  set foldcolumn=0
endif

" plug-in settings
" -------------------------------------
filetype plugin indent on
set ofu=syntaxcomplete#Complete

" syntax highlighting
" -------------------------------------
syntax on                             " enable syntax highlighting
syntax enable
set background=dark

if &term ==# "linux"
  colorscheme desert
else
  colorscheme euphrasia
endif

" custom keybindings
" -------------------------------------
let maplocalleader = ","
let mapleader = ","

map Q <Nop>
map q: <Nop>
map <F11> <Nop>

map <F2> :wall<CR>
map <silent> <F12> :set hlsearch! hlsearch?<CR>
map <silent> <LocalLeader>l :NERDTreeToggle<CR>
" map <silent> <LocalLeader>p :TlistToggle<CR>
map <silent> <LocalLeader>m :bnext<cr>
map <silent> <LocalLeader>v :bprev<cr>

" building
nnoremap <F5> :w<CR> :SyntasticCheck<CR>
nnoremap <S-F5> :make %<<CR>
nnoremap <S-F6> :!./"%"<CR>

" whitespace
"nnoremap <F10> :EraseBadWhitespace<CR>
"nnoremap <F11> :ToggleBadWhitespace<CR>

" map space to create/open/close fold
nnoremap <silent> <Space> @=(foldlevel('.')?'za':'l')<CR>
vnoremap <Space> zf

nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" normal movement for wrapped lines
noremap k gk
noremap j gj

" quick split
noremap <silent> V :vsplit<CR> :wincmd l<CR>
noremap <silent> H :split<CR> :wincmd j<CR>

nnoremap Q <C-W>q
nnoremap W :wq<CR>
nnoremap B :buffers<CR>:buffer<Space>
" nnoremap T :TlistAddFiles<Space>

" resizing
"noremap + <C-w><
"noremap _ <C-w>>
"noremap = <C-w>+
"noremap - <C-w>-

" window movement
nnoremap <silent> <C-k> :wincmd k<CR>
nnoremap <silent> <C-l> <C-W>w
nnoremap <silent> <C-h> :wincmd h<CR>
nnoremap <silent> <C-j> :wincmd j<CR>

" tab navigation
noremap <LocalLeader>1 1gt
noremap <LocalLeader>2 2gt
noremap <LocalLeader>3 3gt
noremap <LocalLeader>4 4gt
noremap <LocalLeader>5 5gt
noremap <LocalLeader>6 6gt
noremap <LocalLeader>7 7gt
noremap <LocalLeader>8 8gt
noremap <LocalLeader>9 9gt
noremap <LocalLeader>10 10gt

noremap <silent> <C-S>          :update<CR>

" allow writing root files when forgetting to sudo
cmap w!! w !sudo tee % >/dev/null<CR>:e!<CR><CR>

" auto commands
" -------------------------------------
" turn hash bangs into executeables automatically
au BufWritePost * if getline(1) =~ "^#!" | silent :!chmod +x <afile>
au BufWritePost .vimrc source %

" save last position
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif "

" file type specific settings
au FileType c           setlocal ts=8 sw=8
au FileType javascript  setlocal ts=2 sw=2 et
au FileType cpp         setlocal ts=4 sw=4
au FileType make        setlocal noet
au FileType python      setlocal sw=4 ts=4

au BufRead,BufNewFile *.md setlocal textwidth=80

let &titleold=getcwd()

" plugin settings
" -------------------------------------
let NERDSpaceDelims = 1
let NERDUsePlaceHolders = 0
let NERDTreeQuitOnOpen = 1
let NERDChristmasTree = 1
"let NERDRemoveExtraSpaces = 1

" indentLine
let g:indentLine_color_term = 234
let g:indentLine_char = '|'

" delimiteMate
let delimitMate_expand_cr=1

" ycm
let g:ycm_global_ycm_extra_conf = '/home/hsp/.ycm_extra_conf.py'

" airline
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"

" Syntastic
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = '⚠'
let g:syntastic_style_error_symbol = '✘'
let g:syntastic_style_warning_symbol = '⚠'
let g:syntastic_check_on_wq = 1
let g:syntastic_check_on_open = 1
let g:syntastic_auto_loc_list = 2
let g:syntastic_always_populate_loc_list = 1
" let syntastic_full_redraws = 0
" let g:sytastic_mode_map = { 'mode': 'active',
                          " \ 'active_filetypes': ['javascript', 'python'],
                          " \ 'passive_filetypes': []}
